// default state of precrop upload

- upload ||= @upload
- recipient = (params[:for] || "person").to_sym

- if recipient == :scrap
  - object = Droom::Scrap.new
  - w = 260
  - h = 260
  - multiplier = 2

- elsif recipient == :person
  - object = Droom::Person.new
  - w = 130
  - h = 130
  - multiplier = 4

- prefix = 'image'

- max_w = upload.width(:precrop)
- max_h = upload.height(:precrop)
- image_w = max_w * 3 / 4
- image_h = max_h * 3 / 4
- image_l = (w - image_w)/2
- image_t = (h - image_h)/2

// scale_* will already be defined when editing an existing crop
- scale_w ||= image_w
- scale_h ||= image_h
- scale_l ||= image_l
- scale_t ||= image_t

.cropper
  .preview{:style => "width: #{scale_w}px; height: #{scale_h}px; top: #{scale_t}px; left: #{scale_l}px"}
    %img{:src => upload.file.url(:precrop)}
    = link_to t(:detach_upload), '#', :class => 'detach'

  = fields_for recipient, object do |sf|
    %fieldset.crop
      = hidden_field_tag :multiplier, multiplier
      = sf.hidden_field :"#{prefix}_offset_left", :value => scale_l, :class => 'ol'
      = sf.hidden_field :"#{prefix}_offset_top", :value => scale_t, :class => 'ot'
      = sf.hidden_field :"#{prefix}_upload_id", :value => upload.id
      .scaler
        %p.range
          = sf.range_field :"#{prefix}_scale_width", :min => w, :max => max_w, :value => scale_w, :class => 'sw'
          = sf.hidden_field :"#{prefix}_scale_height", :value => scale_h, :class => 'sh'
