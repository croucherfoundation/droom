- fields ||= nil
- fields_counter ||= nil
- phone ||= fields || @phone
- user = @user || current_user
- if local_assigns.has_key? :is_edit_mode
  - is_edit_mode = is_edit_mode
- else
  - is_edit_mode = true

= fields_for user do |uf|
  = uf.fields_for :phones, phone, :child_index => fields_counter || 'field_counter' do |f|

    %fieldset.repeating
      %p.twocol.reversed
        %span.col>
          - if is_edit_mode || @user.new_record?
            = f.text_field :phone, :placeholder => t("placeholders.phone.phone")
          - else
            = f.text_field :phone, :placeholder => t("placeholders.phone.phone"), disabled: true
        %span.col.last>
          - if is_edit_mode || @user.new_record?
            = f.select :address_type_id, Droom::AddressType.for_selection(:phone)
          - else
            = f.select :address_type_id, Droom::AddressType.for_selection(:phone), {}, {disabled: true}

      - if is_edit_mode || @user.new_record?
        .controls
          = link_to t(:remove), '#', :class => "remove minimal", :data => {:action => "remove_fields", :holder => "fieldset"}
          - if phone.persisted?
            = f.hidden_field :_destroy, data: {role: "destroy"}

