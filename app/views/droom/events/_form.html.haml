= form_for @event, :html => {:class => 'edit event', :remote => true, :data => {:type => :html}} do |f|
  .datemark.datepicker
    %a{:href => "#"}
      - if @event.start
        %span.mon= @event.start.strftime('%b')
        %span.dom= @event.start.strftime('%d')
        %span.year= @event.start.strftime('%Y')
      - else
        %span.mon= t(:mon)
        %span.dom= t(:dom)
        %span.year= t(:year)

    = f.hidden_field :start_date
    .kal

  .summary
    %p.name
      = f.text_field :name, :class => 'name', :placeholder => t(:event_name)

    %p.practicalities
      = f.text_field :start_time, :class => "timepicker start", :value => (I18n.l(@event.start_time, :format => :precise) if @event.start_time), :placeholder => t(:event_time)
      = t :to
      = f.text_field :finish_time, :class => "timepicker finish", :value => (I18n.l(@event.finish_time, :format => :precise) if @event.finish_time), :placeholder => t(:finish_time)
      = t :at
      %span.venue
        %span.name
          = f.text_field :venue_name, :class => "venuepicker", :placeholder => t(:venue_name), :autocomplete => "off"

    %p.visibility
      = f.check_box :private
      = f.label :private

    .description.wysihtml
      .toolbar#t1
        = render 'droom/shared/toolbar'
      = f.text_area :description, :id => 'd1'

    - if admin?
      %p.calendar
        = f.label :calendar_id
        = f.select :calendar_id, Droom::Calendar.all.collect{|cal| [cal.name, cal.id]}

    .buttons
      = f.submit t(:save_event)
      = t :or
      = link_to t(:cancel), "/", :class => 'cancel'
